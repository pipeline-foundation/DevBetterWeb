name: CI/CD Pipeline

on: [push, pull_request, workflow_dispatch]

jobs:
  ci:
    name: Continuous Integration
    strategy:
      matrix:
        os: [ubuntu-18.04, windows-latest]
    runs-on: ${{ matrix.os }}
    outputs:
      is_push_to_default_branch: ${{ steps.conditionals_handler.outputs.is_push_to_default_branch }}

    steps:
      - name: Data gatherer
        id: data_gatherer
        shell: pwsh
        run: |
          # Get default branch
          $repo = "${{ github.repository }}"
          $defaultBranch = Invoke-RestMethod -Method GET -Uri https://api.github.com/repos/$repo | Select-Object -ExpandProperty default_branch
          Write-Output "::set-output name=default_branch::$(echo $defaultBranch)"

      - name: Conditionals handler
        id: conditionals_handler
        shell: pwsh
        run: |
          $defaultBranch = "${{ steps.data_gatherer.outputs.default_branch }}"
          $githubRef = "${{ github.ref }}"
          $githubEventName = "${{ github.event_name }}"
          $isDefaultBranch = 'false'
          $isPush = 'false'
          $isPushToDefaultBranch = 'false'
          if ( $githubRef -like "*$defaultBranch*" ) {
            $isDefaultBranch = 'true'
          }
          if ( $githubEventName -eq 'push' ) {
            $isPush = 'true'
          }
          if ( $githubRef -like "*$defaultBranch*" -and $githubEventName -eq 'push' ) {
            $isPushToDefaultBranch = 'true'
          }
          Write-Output "::set-output name=is_default_branch::$(echo $isDefaultBranch)"
          Write-Output "::set-output name=is_push::$(echo $isPush)"
          Write-Output "::set-output name=is_push_to_default_branch::$(echo $isPushToDefaultBranch)"

      - name: Setup .NET Core
        id: setup_dotnet_core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.101

      - name: Checkout repository
        id: checkout_repo
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Build solution
        id: build_solution
        shell: pwsh
        run: |
          dotnet build .\DevBetterWeb.sln --configuration Release

      - name: Run unit tests
        id: run_unit_tests
        shell: pwsh
        run: |
          dotnet test .\DevBetterWeb.sln --configuration Release --no-build

  cd:
    if: needs.ci.outputs.is_push_to_default_branch == 'true'
    name: Continuous Deployment
    needs: ci
    runs-on: ubuntu-18.04
    env:
      AZURE_WEBAPP_NAME: devBetter
      AZURE_GROUP_NAME: DevBetterGroup
      AZURE_WEBAPP_PACKAGE_PATH: '.'

    steps:
      - name: Checkout repository
        id: checkout_repo
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Publish Web
        id: publish_web
        run: dotnet publish ./src/DevBetterWeb.Web/DevBetterWeb.Web.csproj `
          --configuration Release `
          --output '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/WebApp'

      - name: Azure webapp deploy with Publish Profile
        id: azure_webapp_deploy_with_publish_profile
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZUREWEBAPPPUBLISHPROFILE }}
          package: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/WebApp'